name: docker
services:
  python:
    image: us-central1-docker.pkg.dev/project-lee-1/docker/python:INPUT_PYTHON_VERSION
    build:
      context: ./python
      args:
        PYTHON_VERSION: INPUT_PYTHON_VERSION
        GCLOUD_VERSION: INPUT_GCLOUD_VERSION
        DOTNET_VERSION: "INPUT_DOTNET_VERSION"
    ports:
      - "8888:8888"
    volumes:
      - type: volume
        source: onedrive
        target: /root/github
      - type: volume
        source: gcs
        target: /root/gcs
      - type: bind
        source: /home/ubuntu/secret
        target: /root/secret
      - type: bind
        source: /home/ubuntu/dll
        target: /root/dll
    environment:
      - NAMESPACE=dask
  r:
    image: us-central1-docker.pkg.dev/project-lee-1/docker/r:INPUT_R_VERSION
    build:
      context: ./r
      args:
        R_VERSION: INPUT_R_VERSION
        GCLOUD_VERSION: INPUT_GCLOUD_VERSION
        SPARK_VERSION: INPUT_SPARK_VERSION
        JAVA_VERSION: INPUT_JAVA_VERSION
    ports:
      - "8787:8787"
    volumes:
      - type: volume
        source: onedrive
        target: /home/rstudio/github
      - type: volume
        source: gcs
        target: /home/rstudio/gcs
      - type: bind
        source: /home/ubuntu/secret
        target: /home/rstudio/secret
    environment:
      - NAMESPACE=spark
  julia:
    image: us-central1-docker.pkg.dev/project-lee-1/docker/julia:INPUT_JULIA_VERSION
    build:
      context: ./julia
      args:
        JULIA_VERSION: INPUT_JULIA_VERSION
        GCLOUD_VERSION: INPUT_GCLOUD_VERSION
    ports:
      - "1234:1234"
    volumes:
      - type: volume
        source: onedrive
        target: /root/github
      - type: volume
        source: gcs
        target: /root/gcs
      - type: bind
        source: /home/ubuntu/secret
        target: /root/secret
    environment:
      - NAMESPACE=julia
  postgres:
    image: postgres:INPUT_POSTGRES_VERSION
    ports:
      - "5432:5432"
    volumes:
      - type: volume
        source: postgres
        target: /var/lib/postgresql/data
      - type: volume
        source: gcs
        target: /var/lib/postgresql/gcs
    environment:
      - POSTGRES_PASSWORD=INPUT_POSTGRES_PASSWORD
  trino:
    image: trinodb/trino:INPUT_TRINO_VERSION
    ports:
      - "8080:8080"
    volumes:
      - type: volume
        source: trino_catalog
        target: /etc/trino/catalog
      - type: volume
        source: trino_data
        target: /data/trino
      - type: volume
        source: gcs
        target: /home/trino/gcs
    environment:
      - POSTGRES_PASSWORD=INPUT_POSTGRES_PASSWORD
  # mysql:
    # image: mysql:8.0.29
    # ports:
      # - "3306:3306"
    # volumes:
      # - type: volume
        # source: mysql
        # target: /var/lib/mysql
    # environment:
      # - MYSQL_ROOT_PASSWORD=PASSWORD_FILE
volumes:
  postgres:
  trino_data:
  trino_catalog:
    driver: rclone
    driver_opts:
      remote: "onedrive:backup/github/docker/trino/catalog"
  onedrive:
    driver: rclone
    driver_opts:
      remote: "onedrive:backup/github"
  gcs:
    driver: rclone
    driver_opts:
      remote: "gcs:"
  # mysql:
